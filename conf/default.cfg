#When loading some cfg file in a 4lang module, unspecified parameters are assigned default values from this file
#Wherever possible, these values correspond to the most typical settings and test datasets distributed with 4lang

#Stanford Parser
[stanford]
#may in the future support using remote servers for parsing, leave it False for now
remote = False

#full path of Stanford Parser directory
dir = /home/recski/projects/stanford_dp/stanford-parser-full-2015-01-30/

#name of parser JAR file
parser = stanford-parser.jar

#name of model to load
model = englishRNN.ser.gz

#full path of jython executable
jython = /home/recski/projects/jython/jython

#Stanford CoreNLP
[corenlp]
#name of Java class to load
class_name = edu.stanford.nlp.pipeline.StanfordCoreNLP

#full path of Stanford CoreNLP directory
# CAUTION: when you change this path to point to your download, make sure it still ends with /*
classpath = /home/recski/projects/stanford_coreNLP/stanford-corenlp-full-2015-04-20/*

[magyarlanc]
path = magyarlanc/magyarlanc-2.0.jar

#miscellaneous data
[data]
#directory to save output of dependency parsing
deps_dir = test/deps
#directory for temporary files
tmp_dir = test/tmp

#dictionary data
[dict]
#input format
#possible values are: longman, collins, wiktionary, eksz, nszt
input_type = longman

#path to input file
input_file = test/input/longman_test.xml

#path to JSON file containing parsed dictionary entries
output_file = test/dict/longman_test.json

#text_to_4lang options
[text]
#path to input data
input_sens = test/input/mrhug_story.sens

#set to True to perform expansion on graphs built from text
expand = False

#set True to print dot files for each sentence
print_graphs = True

#path to save dot files
graph_dir = test/graphs/text

#if True, only dependency parsing will run and its output saved, but 4lang
#graphs won't be built. Useful when working with large datasets.
parse_only = False

#path to save output of parsers
deps_dir = test/deps/text

#options to control which definitions are included by dict_to_4lang
[filter]

#include multiword expressions
keep_multiword = False

#include words with apostrophes
keep_apostrophes = False

#discard all but the first definition of each headword
first_only = True

[lemmatizer]
#full path of hunmorph binaries and models
hunmorph_path = /home/recski/sandbox/huntools_binaries

#path of cache (loaded but not updated by default, see docs)
cache_file = data/hunmorph_cache.txt

#options related to 4lang graphs
[machine]
#file containing 4lang dictionary
definitions = 4lang

#extra data for 4lang, currently not in use
plurals = 4lang.plural
primitives = 4lang.primitive

#pickle file to load 4lang graphs from
definitions_binary = data/machines/4lang.pickle

#pickle file to save 4lang graphs
definitions_binary_out = test/machines/wikt_test.pickle

#pickle file to save expanded 4lang graphs
expanded_definitions = test/machines/wikt_test_expanded.pickle

#path of directory for printing dot graphs
graph_dir = test/graphs/wikt_test

[deps]
#path to the map from dependencies to 4lang edges
dep_map = dep_to_4lang.txt
#language of the mapping (en or hu)
lang = en

#options for testing the word similarity module
[word_sim]
4langpath = /home/recski/sandbox/4lang
definitions_binary = %(4langpath)s/data/machines/longman_firsts.pickle
dep_map = %(4langpath)s/dep_to_4lang.txt
graph_dir = %(4langpath)s/data/graphs/sts
batch = true
expand = false

#options for experimental sentence similarity system
[sim]
similarity_type = word_test
word_test_data = ws_data/wordsim_similarity_goldstandard.txt
graph_dir = test/graphs/sts_test
deps_dir = test/deps/sts_test

#options for experimental question answering system
[qa]
input_file = test/input/clef_qa_sample.xml
output_file = test/qa/clef_qa_sample.answers
graph_dir = test/graphs/qa_test
deps_dir = test/deps/qa_test

